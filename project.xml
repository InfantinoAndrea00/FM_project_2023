<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>const int SPEED = 1;    // slots/time
const int N_SLOTS = 104;
const int N_MAIN_BRANCH = 93;
const int START_BRANCH_SLOT = 66;
const int END_BRANCH_SLOT = 88;
const int N_STATIONS = 6;
const int N_IN_SENSORS = N_STATIONS;
const int N_OUT_SENSORS = 5;

// STATION POSITIONS
const int POS_STATIONS[6] = {1, 19, 40, 83, 95, 104};

broadcast chan initialize, move, receive_all;
urgent chan go[N_SLOTS + N_STATIONS], stop[N_SLOTS + N_STATIONS], go_station[N_OUT_SENSORS], stop_station[N_OUT_SENSORS], switch_branch, ready_to_receive;

bool sequence[N_SLOTS + N_STATIONS];        // true: slot, false: station
bool system_state[N_SLOTS + N_STATIONS];    // true if the piece is in that position

void init_system() {
    for(i : int[0, N_SLOTS + N_STATIONS - 1])
        sequence[i] = true;
    
    sequence[POS_STATIONS[0]] = false;
    sequence[POS_STATIONS[1]] = false;
    sequence[POS_STATIONS[2]] = false;
    sequence[POS_STATIONS[3]] = false;
    sequence[POS_STATIONS[4]] = false;
    sequence[POS_STATIONS[5]] = false;

    for(i : int[0, N_SLOTS + N_STATIONS - 1])
        if(i &gt;= 3 and i &lt;= 14)
            system_state[i] = true;
        else
            system_state[i] = false;
}

bool init_disks(int id) {
    if(id &gt;= 3 and id &lt;= 14)
        return true;
    return false;
}</declaration>
	<template>
		<name>ConveyorBeltHandler</name>
		<declaration>int c;</declaration>
		<location id="id0" x="-399" y="-297">
		</location>
		<location id="id1" x="-399" y="-161">
		</location>
		<init ref="id0"/>
		<transition id="id2">
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="-561" y="-263">c == N_SLOTS</label>
			<label kind="synchronisation" x="-561" y="-246">receive_all!</label>
			<label kind="assignment" x="-501" y="-229">c = 0</label>
			<nail x="-450" y="-195"/>
			<nail x="-450" y="-272"/>
			<nail x="-416" y="-289"/>
		</transition>
		<transition id="id3">
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-450" y="-85">ready_to_receive?</label>
			<label kind="assignment" x="-450" y="-68">c++</label>
			<nail x="-365" y="-85"/>
			<nail x="-425" y="-85"/>
		</transition>
		<transition id="id4">
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-391" y="-246">ready_to_receive?</label>
			<label kind="assignment" x="-391" y="-229">c = 1</label>
		</transition>
	</template>
	<template>
		<name>ConveyorBeltMotor</name>
		<declaration>clock x;</declaration>
		<location id="id5" x="-790" y="-484">
		</location>
		<location id="id6" x="-790" y="-348">
			<label kind="invariant" x="-773" y="-357">x &lt;= SPEED</label>
		</location>
		<init ref="id5"/>
		<transition id="id7">
			<source ref="id6"/>
			<target ref="id6"/>
			<label kind="guard" x="-807" y="-280">x &gt;= SPEED</label>
			<label kind="synchronisation" x="-807" y="-263">move!</label>
			<label kind="assignment" x="-807" y="-246">x = 0</label>
			<nail x="-807" y="-280"/>
			<nail x="-765" y="-280"/>
		</transition>
		<transition id="id8">
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-782" y="-433">initialize!</label>
			<label kind="assignment" x="-782" y="-416">x = 0, init_system()</label>
		</transition>
	</template>
	<template>
		<name x="5" y="5">ConveyorBeltSlot</name>
		<parameter>const int id</parameter>
		<declaration>int next_slot, prev_slot;
bool occupied;

int get_next() {
    if(id == N_MAIN_BRANCH - 1)
        return 0;
    if(id == N_SLOTS + N_STATIONS - 1)
        return END_BRANCH_SLOT;
    return id + 1;
}

int get_prev() {
    if(id == 0)
        return N_MAIN_BRANCH - 1;
    if(id == N_MAIN_BRANCH)
        return START_BRANCH_SLOT;
    return id - 1;
}

void initialize_slot() {
    occupied = init_disks(id);
    next_slot = get_next();
    prev_slot = get_prev();
}

void switch_branch_fun() {
    if(next_slot == id + 1)
        next_slot = N_MAIN_BRANCH;
    else
        next_slot = id + 1;
}</declaration>
		<location id="id9" x="-331" y="-561">
		</location>
		<location id="id10" x="-331" y="-416">
			<name x="-322" y="-442">Free_to_Move</name>
		</location>
		<location id="id11" x="-603" y="-280">
			<name x="-586" y="-289">Stopped</name>
		</location>
		<location id="id12" x="34" y="-416">
			<committed/>
		</location>
		<location id="id13" x="-603" y="-110">
			<committed/>
		</location>
		<location id="id14" x="-603" y="-416">
			<committed/>
		</location>
		<location id="id15" x="34" y="-110">
			<committed/>
		</location>
		<location id="id16" x="-152" y="-110">
			<name x="-195" y="-144">Wait_to_Receive</name>
		</location>
		<location id="id17" x="-331" y="-110">
			<committed/>
		</location>
		<location id="id18" x="-654" y="-476">
			<committed/>
		</location>
		<location id="id19" x="-773" y="-110">
			<committed/>
		</location>
		<init ref="id9"/>
		<transition id="id20">
			<source ref="id19"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="-765" y="-238">ready_to_receive!</label>
			<nail x="-773" y="-280"/>
		</transition>
		<transition id="id21">
			<source ref="id18"/>
			<target ref="id10"/>
			<label kind="synchronisation" x="-560" y="-501">go[prev_slot]!</label>
			<nail x="-373" y="-476"/>
		</transition>
		<transition id="id22">
			<source ref="id11"/>
			<target ref="id18"/>
			<label kind="synchronisation" x="-722" y="-382">go[id]?</label>
			<nail x="-654" y="-331"/>
		</transition>
		<transition id="id23">
			<source ref="id17"/>
			<target ref="id10"/>
			<label kind="assignment" x="-323" y="-238">occupied = system_state[id]</label>
		</transition>
		<transition id="id24">
			<source ref="id16"/>
			<target ref="id17"/>
			<label kind="synchronisation" x="-288" y="-110">receive_all?</label>
		</transition>
		<transition id="id25">
			<source ref="id15"/>
			<target ref="id16"/>
			<label kind="synchronisation" x="-127" y="-110">ready_to_receive!</label>
		</transition>
		<transition id="id26">
			<source ref="id10"/>
			<target ref="id10"/>
			<label kind="guard" x="-271" y="-348">id == START_BRANCH_SLOT</label>
			<label kind="synchronisation" x="-271" y="-331">switch_branch?</label>
			<label kind="assignment" x="-271" y="-314">switch_branch_fun()</label>
			<nail x="-246" y="-365"/>
			<nail x="-297" y="-323"/>
		</transition>
		<transition id="id27">
			<source ref="id12"/>
			<target ref="id15"/>
			<label kind="assignment" x="42" y="-255">system_state[next_slot] = occupied</label>
		</transition>
		<transition id="id28">
			<source ref="id14"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="-594" y="-348">stop[prev_slot]!</label>
		</transition>
		<transition id="id29">
			<source ref="id10"/>
			<target ref="id14"/>
			<label kind="guard" x="-501" y="-416">occupied == true</label>
			<label kind="synchronisation" x="-501" y="-399">stop[id]?</label>
		</transition>
		<transition id="id30">
			<source ref="id13"/>
			<target ref="id19"/>
			<label kind="synchronisation" x="-756" y="-102">stop[prev_slot]!</label>
		</transition>
		<transition id="id31">
			<source ref="id11"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-594" y="-212">move?</label>
			<nail x="-603" y="-178"/>
		</transition>
		<transition id="id32">
			<source ref="id10"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="-178" y="-442">move?</label>
		</transition>
		<transition id="id33">
			<source ref="id9"/>
			<target ref="id10"/>
			<label kind="synchronisation" x="-322" y="-518">initialize?</label>
			<label kind="assignment" x="-322" y="-501">initialize_slot()</label>
		</transition>
	</template>
	<template>
		<name x="5" y="5">FlowController</name>
		<parameter>const int policy, const int T</parameter>
		<declaration>clock x;</declaration>
		<location id="id34" x="-1964" y="-2091">
			<name x="-1947" y="-2117">Open_1</name>
		</location>
		<location id="id35" x="-1752" y="-1989">
			<name x="-1735" y="-2015">Closed_2</name>
		</location>
		<location id="id36" x="-2542" y="-2040">
			<name x="-2601" y="-2074">Start</name>
		</location>
		<location id="id37" x="-1964" y="-1862">
			<name x="-2007" y="-1912">Open_3</name>
			<label kind="invariant" x="-2109" y="-1895">x &gt;= T &amp;&amp; x &lt;= 2*T</label>
		</location>
		<location id="id38" x="-1751" y="-1862">
			<name x="-1752" y="-1912">Closed_3</name>
			<label kind="invariant" x="-1752" y="-1895">x &gt;= T &amp;&amp; x &lt;= 2*T</label>
		</location>
		<location id="id39" x="-1955" y="-2261">
			<name x="-2015" y="-2295">Open_0</name>
			<label kind="invariant" x="-1965" y="-2244">x &gt;= 1</label>
		</location>
		<location id="id40" x="-1785" y="-2337">
			<committed/>
		</location>
		<location id="id41" x="-1615" y="-2261">
			<name x="-1598" y="-2287">Closed_0</name>
			<label kind="invariant" x="-1625" y="-2244">x &gt;= 1</label>
		</location>
		<location id="id42" x="-1785" y="-2184">
			<committed/>
		</location>
		<location id="id43" x="-1964" y="-1607">
			<name x="-2032" y="-1641">Open_4</name>
		</location>
		<location id="id44" x="-1794" y="-1683">
		</location>
		<location id="id45" x="-1641" y="-1598">
			<name x="-1651" y="-1632">Closed_4</name>
		</location>
		<location id="id46" x="-1794" y="-1522">
		</location>
		<location id="id47" x="-1964" y="-1989">
			<committed/>
		</location>
		<init ref="id36"/>
		<transition id="id48">
			<source ref="id47"/>
			<target ref="id35"/>
			<label kind="synchronisation" x="-1939" y="-2014">switch_branch!</label>
		</transition>
		<transition id="id49">
			<source ref="id36"/>
			<target ref="id43"/>
			<label kind="guard" x="-2347" y="-1649">policy == 4</label>
			<label kind="synchronisation" x="-2347" y="-1632">initialize?</label>
			<nail x="-2355" y="-1607"/>
		</transition>
		<transition id="id50">
			<source ref="id45"/>
			<target ref="id46"/>
			<label kind="guard" x="-1718" y="-1555">system_state[N_MAIN_BRANCH] == true</label>
		</transition>
		<transition id="id51">
			<source ref="id46"/>
			<target ref="id43"/>
			<label kind="synchronisation" x="-1989" y="-1556">switch_branch!</label>
		</transition>
		<transition id="id52">
			<source ref="id44"/>
			<target ref="id45"/>
			<label kind="synchronisation" x="-1726" y="-1666">switch_branch!</label>
		</transition>
		<transition id="id53">
			<source ref="id43"/>
			<target ref="id44"/>
			<label kind="guard" x="-2202" y="-1683">system_state[START_BRANCH_SLOT + 1] == true</label>
			<label kind="comments" x="-1964" y="-1496">TODO: Check the position in the system_state</label>
		</transition>
		<transition id="id54">
			<source ref="id36"/>
			<target ref="id39"/>
			<label kind="guard" x="-2355" y="-2303">policy == 0</label>
			<label kind="synchronisation" x="-2355" y="-2286">initialize?</label>
			<nail x="-2363" y="-2261"/>
		</transition>
		<transition id="id55">
			<source ref="id42"/>
			<target ref="id39"/>
			<label kind="synchronisation" x="-1956" y="-2210">switch_branch!</label>
		</transition>
		<transition id="id56">
			<source ref="id41"/>
			<target ref="id42"/>
			<label kind="synchronisation" x="-1718" y="-2201">stop[POS_STATIONS[4]]?</label>
			<label kind="assignment" x="-1718" y="-2218">x = 0</label>
		</transition>
		<transition id="id57">
			<source ref="id40"/>
			<target ref="id41"/>
			<label kind="synchronisation" x="-1718" y="-2329">switch_branch!</label>
		</transition>
		<transition id="id58">
			<source ref="id39"/>
			<target ref="id40"/>
			<label kind="synchronisation" x="-2032" y="-2346">stop[POS_STATIONS[3]]?</label>
			<label kind="assignment" x="-1888" y="-2329">x = 0</label>
		</transition>
		<transition id="id59">
			<source ref="id36"/>
			<target ref="id47"/>
			<label kind="guard" x="-2355" y="-2032">policy == 2</label>
			<label kind="synchronisation" x="-2355" y="-2014">initialize?</label>
			<nail x="-2363" y="-1989"/>
		</transition>
		<transition id="id60">
			<source ref="id36"/>
			<target ref="id37"/>
			<label kind="guard" x="-2355" y="-1904">policy == 3</label>
			<label kind="synchronisation" x="-2355" y="-1887">initialize?</label>
			<nail x="-2363" y="-1862"/>
		</transition>
		<transition id="id61">
			<source ref="id36"/>
			<target ref="id34"/>
			<label kind="guard" x="-2355" y="-2133">policy == 1</label>
			<label kind="synchronisation" x="-2355" y="-2116">initialize?</label>
			<nail x="-2363" y="-2091"/>
		</transition>
		<transition id="id62">
			<source ref="id37"/>
			<target ref="id38"/>
			<label kind="synchronisation" x="-1913" y="-1955">switch_branch!</label>
			<label kind="assignment" x="-1913" y="-1939">x = 0</label>
			<nail x="-1921" y="-1913"/>
			<nail x="-1785" y="-1913"/>
		</transition>
		<transition id="id63">
			<source ref="id38"/>
			<target ref="id37"/>
			<label kind="synchronisation" x="-1913" y="-1785">switch_branch!</label>
			<label kind="assignment" x="-1913" y="-1802">x = 0</label>
			<nail x="-1785" y="-1803"/>
			<nail x="-1929" y="-1803"/>
		</transition>
	</template>
	<template>
		<name>InSensor</name>
		<parameter>const int on_slot, const int guarded_station</parameter>
		<location id="id64" x="-535" y="-1105">
		</location>
		<location id="id65" x="-535" y="-986">
			<name x="-603" y="-1011">Unlocked</name>
		</location>
		<location id="id66" x="-866" y="-986">
			<committed/>
		</location>
		<location id="id67" x="-535" y="-773">
			<name x="-560" y="-807">Locked</name>
		</location>
		<location id="id68" x="-229" y="-986">
			<committed/>
		</location>
		<init ref="id64"/>
		<transition id="id69">
			<source ref="id67"/>
			<target ref="id67"/>
			<label kind="guard" x="-628" y="-688">system_state[guarded_station] == true</label>
			<label kind="synchronisation" x="-629" y="-671">receive_all?</label>
			<nail x="-526" y="-765"/>
			<nail x="-492" y="-688"/>
			<nail x="-569" y="-688"/>
		</transition>
		<transition id="id70">
			<source ref="id65"/>
			<target ref="id65"/>
			<label kind="guard" x="-628" y="-909">system_state[guarded_station] == false</label>
			<label kind="synchronisation" x="-629" y="-892">receive_all?</label>
			<nail x="-526" y="-977"/>
			<nail x="-492" y="-909"/>
			<nail x="-569" y="-909"/>
		</transition>
		<transition id="id71">
			<source ref="id68"/>
			<target ref="id65"/>
			<label kind="synchronisation" x="-407" y="-986">go[on_slot]!</label>
		</transition>
		<transition id="id72">
			<source ref="id67"/>
			<target ref="id68"/>
			<label kind="guard" x="-492" y="-773">system_state[guarded_station] == false</label>
			<label kind="synchronisation" x="-492" y="-756">receive_all?</label>
			<nail x="-229" y="-773"/>
		</transition>
		<transition id="id73">
			<source ref="id66"/>
			<target ref="id67"/>
			<label kind="synchronisation" x="-773" y="-773">stop[on_slot]!</label>
			<nail x="-866" y="-773"/>
		</transition>
		<transition id="id74">
			<source ref="id65"/>
			<target ref="id66"/>
			<label kind="guard" x="-815" y="-986">system_state[guarded_station] == true</label>
			<label kind="synchronisation" x="-815" y="-969">receive_all?</label>
		</transition>
		<transition id="id75">
			<source ref="id64"/>
			<target ref="id65"/>
			<label kind="synchronisation" x="-526" y="-1063">initialize?</label>
		</transition>
	</template>
	<template>
		<name>OutSensor</name>
		<parameter>const int id, const int on_slot</parameter>
		<location id="id76" x="42" y="111">
			<name x="17" y="77">Locked</name>
		</location>
		<location id="id77" x="42" y="-102">
			<name x="-26" y="-127">Unlocked</name>
		</location>
		<location id="id78" x="348" y="-102">
			<committed/>
		</location>
		<location id="id79" x="-289" y="-102">
			<committed/>
		</location>
		<location id="id80" x="42" y="-221">
		</location>
		<init ref="id80"/>
		<transition id="id81">
			<source ref="id76"/>
			<target ref="id76"/>
			<label kind="guard" x="-8" y="195">system_state[on_slot] == true</label>
			<label kind="synchronisation" x="-8" y="212">receive_all?</label>
			<nail x="51" y="119"/>
			<nail x="85" y="196"/>
			<nail x="8" y="196"/>
		</transition>
		<transition id="id82">
			<source ref="id77"/>
			<target ref="id77"/>
			<label kind="guard" x="-8" y="-25">system_state[on_slot] == false</label>
			<label kind="synchronisation" x="-8" y="-8">receive_all?</label>
			<nail x="51" y="-93"/>
			<nail x="85" y="-25"/>
			<nail x="8" y="-25"/>
		</transition>
		<transition id="id83">
			<source ref="id78"/>
			<target ref="id77"/>
			<label kind="synchronisation" x="153" y="-102">go_station[id]!</label>
		</transition>
		<transition id="id84">
			<source ref="id76"/>
			<target ref="id78"/>
			<label kind="guard" x="127" y="110">system_state[on_slot] == false</label>
			<label kind="synchronisation" x="127" y="127">receive_all?</label>
			<nail x="348" y="111"/>
		</transition>
		<transition id="id85">
			<source ref="id79"/>
			<target ref="id76"/>
			<label kind="synchronisation" x="-204" y="110">stop_station[id]!</label>
			<nail x="-289" y="111"/>
		</transition>
		<transition id="id86">
			<source ref="id77"/>
			<target ref="id79"/>
			<label kind="guard" x="-238" y="-102">system_state[on_slot] == true</label>
			<label kind="synchronisation" x="-238" y="-85">receive_all?</label>
		</transition>
		<transition id="id87">
			<source ref="id80"/>
			<target ref="id77"/>
			<label kind="synchronisation" x="51" y="-179">initialize?</label>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Station</name>
		<parameter>const int[1, 6] id, const int[1, 1024] processing_time, const int sensor_id</parameter>
		<declaration>clock x;
int station_id;</declaration>
		<location id="id88" x="-374" y="-348">
		</location>
		<location id="id89" x="-374" y="-204">
			<name x="-433" y="-229">Ready</name>
		</location>
		<location id="id90" x="289" y="-204">
			<name x="306" y="-212">Processing</name>
			<label kind="invariant" x="306" y="-195">x &gt;= processing_time</label>
		</location>
		<location id="id91" x="289" y="-59">
			<name x="246" y="-85">Done</name>
		</location>
		<location id="id92" x="-68" y="-59">
			<committed/>
		</location>
		<location id="id93" x="289" y="76">
			<name x="204" y="59">Waiting</name>
		</location>
		<location id="id94" x="-68" y="-204">
			<committed/>
		</location>
		<location id="id95" x="289" y="-340">
			<committed/>
		</location>
		<location id="id96" x="450" y="-59">
			<committed/>
		</location>
		<location id="id97" x="450" y="76">
			<committed/>
		</location>
		<init ref="id88"/>
		<transition id="id98">
			<source ref="id96"/>
			<target ref="id91"/>
			<label kind="synchronisation" x="331" y="-42">stop[station_id - 1]!</label>
			<nail x="416" y="-42"/>
			<nail x="323" y="-42"/>
		</transition>
		<transition id="id99">
			<source ref="id91"/>
			<target ref="id96"/>
			<label kind="synchronisation" x="331" y="-93">move?</label>
			<nail x="323" y="-76"/>
			<nail x="416" y="-76"/>
		</transition>
		<transition id="id100">
			<source ref="id95"/>
			<target ref="id90"/>
			<label kind="synchronisation" x="76" y="-280">stop[station_id - 1]!</label>
			<nail x="263" y="-314"/>
			<nail x="263" y="-238"/>
		</transition>
		<transition id="id101">
			<source ref="id90"/>
			<target ref="id95"/>
			<label kind="synchronisation" x="323" y="-280">move?</label>
			<nail x="314" y="-229"/>
			<nail x="314" y="-314"/>
		</transition>
		<transition id="id102">
			<source ref="id91"/>
			<target ref="id92"/>
			<label kind="guard" x="-42" y="-85">system_state[station_id] == false</label>
			<label kind="synchronisation" x="-42" y="-102">move?</label>
		</transition>
		<transition id="id103">
			<source ref="id94"/>
			<target ref="id90"/>
			<label kind="synchronisation" x="-51" y="-229">stop[station_id - 1]!</label>
		</transition>
		<transition id="id104">
			<source ref="id93"/>
			<target ref="id91"/>
			<label kind="synchronisation" x="76" y="0">go_station[sensor_id]?</label>
			<nail x="272" y="42"/>
			<nail x="272" y="-25"/>
		</transition>
		<transition id="id105">
			<source ref="id92"/>
			<target ref="id89"/>
			<label kind="synchronisation" x="-365" y="-51">go[station_id - 1]!</label>
			<label kind="assignment" x="-365" y="-34">system_state[station_id] = false,
system_state[station_id + 1] = true</label>
			<nail x="-374" y="-59"/>
		</transition>
		<transition id="id106">
			<source ref="id91"/>
			<target ref="id93"/>
			<label kind="synchronisation" x="314" y="0">stop_station[sensor_id]?</label>
			<nail x="306" y="-25"/>
			<nail x="306" y="42"/>
		</transition>
		<transition id="id107">
			<source ref="id90"/>
			<target ref="id91"/>
			<label kind="guard" x="297" y="-153">x &lt;= processing_time</label>
		</transition>
		<transition id="id108">
			<source ref="id89"/>
			<target ref="id94"/>
			<label kind="guard" x="-357" y="-246">system_state[station_id] == true</label>
			<label kind="synchronisation" x="-357" y="-229">receive_all?</label>
			<label kind="assignment" x="-357" y="-204">x = 0</label>
		</transition>
		<transition id="id109">
			<source ref="id88"/>
			<target ref="id89"/>
			<label kind="synchronisation" x="-365" y="-306">initialize?</label>
			<label kind="assignment" x="-365" y="-289">station_id = POS_STATIONS[id - 1]</label>
		</transition>
		<transition id="id110">
			<source ref="id97"/>
			<target ref="id93"/>
			<label kind="synchronisation" x="331" y="93">stop[station_id - 1]!</label>
			<nail x="416" y="93"/>
			<nail x="323" y="93"/>
		</transition>
		<transition id="id111">
			<source ref="id93"/>
			<target ref="id97"/>
			<label kind="synchronisation" x="331" y="42">move?</label>
			<nail x="323" y="59"/>
			<nail x="416" y="59"/>
		</transition>
	</template>
	<system>/*
 * Configuration parameters
 */

// Flow controller
const int policy = 0;
const int policyRandomFactor = -1;    // only used in policy 3

// Stations
const int processingTimes[N_STATIONS] = {5, 5, 5, 5, 5, 5};
const int sensorId[N_STATIONS]        = {0, 1, 2, 3, 4, 3};

// In sensors
const int inSensorsPositions[N_IN_SENSORS] = {             15,              36,              66,              79,              92,             100};
const int inSensorsStations[N_IN_SENSORS]  = {POS_STATIONS[1], POS_STATIONS[2], POS_STATIONS[4], POS_STATIONS[3], POS_STATIONS[5], POS_STATIONS[0]};

// Out sensors
const int outSensorsPositions[N_OUT_SENSORS] = {4, 26, 70, 90, 97};

/*
 * System initialization
 */

// Flow controller
flowController = FlowController(policy, policyRandomFactor);

// Stations
stations(const int[1, 6] id) = Station(id, processingTimes[id - 1], sensorId[id - 1]);

// Conveyor belts
conveyorBeltHandler = ConveyorBeltHandler();
conveyorBeltMotor   = ConveyorBeltMotor();
conveyorBelt0                         = ConveyorBeltSlot(0);
conveyorBelt1(const int[  2,  18] id) = ConveyorBeltSlot(id);
conveyorBelt2(const int[ 20,  39] id) = ConveyorBeltSlot(id);
conveyorBelt3(const int[ 41,  82] id) = ConveyorBeltSlot(id);
conveyorBelt4(const int[ 84,  94] id) = ConveyorBeltSlot(id);
conveyorBelt5(const int[ 96, 103] id) = ConveyorBeltSlot(id);
conveyorBelt6(const int[105, 109] id) = ConveyorBeltSlot(id);

// Sensors
inSensors(const int[0, N_IN_SENSORS - 1] id) = InSensor(inSensorsPositions[id], inSensorsStations[id]);
outSensors(const int[0, N_OUT_SENSORS - 1] id) = OutSensor(id, outSensorsPositions[id]);

system stations, conveyorBelt0, conveyorBelt1, conveyorBelt2, conveyorBelt3, conveyorBelt4, conveyorBelt5, conveyorBelt6, inSensors, outSensors;</system>
	<queries>
		<query>
			<formula/>
			<comment/>
		</query>
	</queries>
</nta>
