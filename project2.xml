<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>/**
 * Constants
 */

const int N_SLOTS = 110;
const int N_STATIONS = 6;
const int N_STATE = N_SLOTS + N_STATIONS;
const int N_CONVEYOR_BELT = 9;
const int N_IN_SENSORS = 5;
const int N_OUT_SENSORS = 5;
const int N_DISK = 12;
// const int N_MAIN_BRANCH = ?;
// const int START_BRANCH_SLOT = ?;

const int POS_STATIONS[6] = {1, 19, 40, 83, 95, 104};
const int POS_IN_SENSORS[6] = {13, 34, 64, 77, 93, 107};
const int POS_OUT_SENSORS[N_OUT_SENSORS] = {2, 24, 68, 90, 105};

/**
 * Variables
 */

broadcast chan initialize;
chan move_belt[N_CONVEYOR_BELT + 1], go[N_IN_SENSORS], stop[N_IN_SENSORS]; // To be general in conveyor belt
chan stationFree[N_STATIONS], stationBusy[N_STATIONS];
chan switchBranch;
// chan send[?];

bool systemState[N_STATE];    // true if the piece is in that position
bool inSensorsState[N_IN_SENSORS]; // true = locked; false = unlocked;
bool outSensorsState[N_OUT_SENSORS]; // true = queue is full; false = can send piece;

//chan go[N_SLOTS + N_STATIONS], stop[N_SLOTS + N_STATIONS], go_station[N_OUT_SENSORS], stop_station[N_OUT_SENSORS], switchBranch, ready_to_receive;

//bool sequence[N_SLOTS + N_STATIONS];        // true: slot, false: station


void init_system() {
    for(i : int[0, N_SLOTS + N_STATIONS - 1])
        if(i &gt;= POS_OUT_SENSORS[N_OUT_SENSORS - 1] and i &lt;= POS_IN_SENSORS[0] and i &gt;= (POS_IN_SENSORS[0] - N_DISK + 1))
            systemState[i] = true;
        else
            systemState[i] = false;
}</declaration>
	<template>
		<name x="5" y="5">ConveyorBelt</name>
		<parameter>const int[0, N_CONVEYOR_BELT] id, int[0, N_IN_SENSORS] sensor, const int[0, N_STATE] startingPosition, const int length, const int[0, N_STATE] previousPosition, const int[0, N_STATE] nextPosition, const int[0, N_STATE] alternativeNextPosition /* TODO: add parameters for the sensors */</parameter>
		<declaration>void update_free() {

}

void update_block() {

}</declaration>
		<location id="id0" x="-2252" y="-2566">
			<name x="-2218" y="-2575">Idle</name>
		</location>
		<location id="id1" x="-2048" y="-2380">
			<name x="-2014" y="-2397">Try_to_move</name>
		</location>
		<location id="id2" x="-2252" y="-2210">
			<name x="-2269" y="-2193">Move</name>
		</location>
		<location id="id3" x="-2465" y="-2397">
			<name x="-2541" y="-2414">Commit</name>
		</location>
		<location id="id4" x="-2252" y="-2635">
		</location>
		<init ref="id4"/>
		<transition id="id5">
			<source ref="id4"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-2235" y="-2618">initialize?</label>
		</transition>
		<transition id="id6">
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="-2201" y="-2320">sensor == -1</label>
			<label kind="assignment" x="-2210" y="-2303">update_free()</label>
		</transition>
		<transition id="id7">
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="-2321" y="-2405">sensor != -1</label>
			<label kind="synchronisation" x="-2321" y="-2422">go[sensor]?</label>
			<label kind="assignment" x="-2321" y="-2388">update_free()</label>
			<nail x="-2169" y="-2396"/>
			<nail x="-2262" y="-2320"/>
		</transition>
		<transition id="id8">
			<source ref="id3"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-2490" y="-2524">move_belt[id + 1]!</label>
		</transition>
		<transition id="id9">
			<source ref="id2"/>
			<target ref="id3"/>
		</transition>
		<transition id="id10">
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="-2074" y="-2218">sensor != -1</label>
			<label kind="synchronisation" x="-2074" y="-2235">stop[sensor]?</label>
			<label kind="assignment" x="-2074" y="-2201">update_block()</label>
			<label kind="comments" x="-2737" y="-2558">Sensor == -1 if not present</label>
			<nail x="-2049" y="-2261"/>
			<nail x="-2135" y="-2189"/>
		</transition>
		<transition id="id11">
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-2167" y="-2524">move_belt[id]?</label>
		</transition>
	</template>
	<template>
		<name x="5" y="5">FlowController</name>
		<parameter>const int policy, const int T</parameter>
		<declaration>clock x;</declaration>
		<location id="id12" x="-1964" y="-2091">
			<name x="-1947" y="-2117">Open_1</name>
		</location>
		<location id="id13" x="-1752" y="-1989">
			<name x="-1735" y="-2015">Closed_2</name>
		</location>
		<location id="id14" x="-2542" y="-2040">
			<name x="-2601" y="-2074">Start</name>
		</location>
		<location id="id15" x="-1964" y="-1862">
			<name x="-2007" y="-1912">Open_3</name>
			<label kind="invariant" x="-2023" y="-1895">x &lt;= 2*T</label>
		</location>
		<location id="id16" x="-1751" y="-1862">
			<name x="-1752" y="-1912">Closed_3</name>
			<label kind="invariant" x="-1752" y="-1895">x &lt;= 2*T</label>
		</location>
		<location id="id17" x="-1955" y="-2261">
			<name x="-2015" y="-2295">Open_0</name>
			<label kind="invariant" x="-1965" y="-2244">x &lt;= 1</label>
		</location>
		<location id="id18" x="-1785" y="-2337">
			<committed/>
		</location>
		<location id="id19" x="-1615" y="-2261">
			<name x="-1598" y="-2287">Closed_0</name>
			<label kind="invariant" x="-1625" y="-2244">x &lt;= 1</label>
		</location>
		<location id="id20" x="-1785" y="-2184">
			<committed/>
		</location>
		<location id="id21" x="-1964" y="-1607">
			<name x="-2032" y="-1641">Open_4</name>
		</location>
		<location id="id22" x="-1794" y="-1683">
		</location>
		<location id="id23" x="-1641" y="-1598">
			<name x="-1651" y="-1632">Closed_4</name>
		</location>
		<location id="id24" x="-1794" y="-1522">
		</location>
		<location id="id25" x="-1964" y="-1989">
			<committed/>
		</location>
		<init ref="id14"/>
		<transition id="id26">
			<source ref="id25"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-1939" y="-2014">switchBranch!</label>
		</transition>
		<transition id="id27">
			<source ref="id14"/>
			<target ref="id21"/>
			<label kind="guard" x="-2347" y="-1649">policy == 4</label>
			<label kind="synchronisation" x="-2347" y="-1632">initialize?</label>
			<nail x="-2355" y="-1607"/>
		</transition>
		<transition id="id28">
			<source ref="id23"/>
			<target ref="id24"/>
			<label kind="guard" x="-1718" y="-1555">systemState[N_MAIN_BRANCH] == true</label>
		</transition>
		<transition id="id29">
			<source ref="id24"/>
			<target ref="id21"/>
			<label kind="synchronisation" x="-1989" y="-1556">switchBranch!</label>
		</transition>
		<transition id="id30">
			<source ref="id22"/>
			<target ref="id23"/>
			<label kind="synchronisation" x="-1726" y="-1666">switchBranch!</label>
		</transition>
		<transition id="id31">
			<source ref="id21"/>
			<target ref="id22"/>
			<label kind="guard" x="-2202" y="-1683">systemState[START_BRANCH_SLOT + 1] == true</label>
			<label kind="comments" x="-1964" y="-1496">TODO: Check the position in the systemState</label>
		</transition>
		<transition id="id32">
			<source ref="id14"/>
			<target ref="id17"/>
			<label kind="guard" x="-2355" y="-2303">policy == 0</label>
			<label kind="synchronisation" x="-2355" y="-2286">initialize?</label>
			<nail x="-2363" y="-2261"/>
		</transition>
		<transition id="id33">
			<source ref="id20"/>
			<target ref="id17"/>
			<label kind="synchronisation" x="-1956" y="-2210">switchBranch!</label>
		</transition>
		<transition id="id34">
			<source ref="id19"/>
			<target ref="id20"/>
			<label kind="guard" x="-1717" y="-2201">x &gt;= 1</label>
			<label kind="synchronisation" x="-1717" y="-2184">stop[POS_STATIONS[4]]?</label>
			<label kind="assignment" x="-1717" y="-2218">x = 0</label>
		</transition>
		<transition id="id35">
			<source ref="id18"/>
			<target ref="id19"/>
			<label kind="synchronisation" x="-1718" y="-2329">switchBranch!</label>
		</transition>
		<transition id="id36">
			<source ref="id17"/>
			<target ref="id18"/>
			<label kind="guard" x="-1904" y="-2346">x &gt;= 1</label>
			<label kind="synchronisation" x="-2041" y="-2363">stop[POS_STATIONS[3]]?</label>
			<label kind="assignment" x="-1896" y="-2329">x = 0</label>
		</transition>
		<transition id="id37">
			<source ref="id14"/>
			<target ref="id25"/>
			<label kind="guard" x="-2355" y="-2032">policy == 2</label>
			<label kind="synchronisation" x="-2355" y="-2014">initialize?</label>
			<nail x="-2363" y="-1989"/>
		</transition>
		<transition id="id38">
			<source ref="id14"/>
			<target ref="id15"/>
			<label kind="guard" x="-2355" y="-1904">policy == 3</label>
			<label kind="synchronisation" x="-2355" y="-1887">initialize?</label>
			<nail x="-2363" y="-1862"/>
		</transition>
		<transition id="id39">
			<source ref="id14"/>
			<target ref="id12"/>
			<label kind="guard" x="-2355" y="-2133">policy == 1</label>
			<label kind="synchronisation" x="-2355" y="-2116">initialize?</label>
			<nail x="-2363" y="-2091"/>
		</transition>
		<transition id="id40">
			<source ref="id15"/>
			<target ref="id16"/>
			<label kind="guard" x="-1912" y="-1955">x &gt;= T</label>
			<label kind="synchronisation" x="-1912" y="-1972">switchBranch!</label>
			<label kind="assignment" x="-1913" y="-1939">x = 0</label>
			<nail x="-1921" y="-1913"/>
			<nail x="-1785" y="-1913"/>
		</transition>
		<transition id="id41">
			<source ref="id16"/>
			<target ref="id15"/>
			<label kind="guard" x="-1912" y="-1785">x &gt;= T</label>
			<label kind="synchronisation" x="-1912" y="-1768">switchBranch!</label>
			<label kind="assignment" x="-1913" y="-1802">x = 0</label>
			<nail x="-1785" y="-1803"/>
			<nail x="-1929" y="-1803"/>
		</transition>
	</template>
	<template>
		<name>InSensor</name>
		<parameter>int[0, N_IN_SENSORS-1] id, int [0, N_STATIONS-1] station_controlled</parameter>
		<location id="id42" x="-34" y="-365">
		</location>
		<location id="id43" x="-34" y="-255">
			<name x="-17" y="-272">Unlocked</name>
		</location>
		<location id="id44" x="-34" y="-59">
			<name x="-8" y="-59">Locked</name>
		</location>
		<init ref="id42"/>
		<transition id="id45">
			<source ref="id44"/>
			<target ref="id43"/>
			<label kind="synchronisation" x="-365" y="-178">stationFree[station_controlled]?</label>
			<label kind="assignment" x="-339" y="-161">inSensorsState[id] = false</label>
			<nail x="-153" y="-102"/>
			<nail x="-153" y="-212"/>
		</transition>
		<transition id="id46">
			<source ref="id43"/>
			<target ref="id44"/>
			<label kind="synchronisation" x="85" y="-178">stationBusy[station_controlled]?</label>
			<label kind="assignment" x="85" y="-161">inSensorsState[id] = true</label>
			<nail x="76" y="-212"/>
			<nail x="76" y="-93"/>
		</transition>
		<transition id="id47">
			<source ref="id42"/>
			<target ref="id43"/>
			<label kind="synchronisation" x="-25" y="-331">initialize?</label>
			<label kind="assignment" x="-25" y="-314">inSensorsState[id] = false</label>
		</transition>
	</template>
	<template>
		<name>Motor</name>
		<parameter>const double speed</parameter>
		<declaration>clock x;
</declaration>
		<location id="id48" x="-178" y="-170">
		</location>
		<location id="id49" x="-178" y="-34">
			<label kind="invariant" x="-161" y="-43">x &lt;= speed</label>
		</location>
		<location id="id50" x="-178" y="119">
			<label kind="invariant" x="-212" y="153">x &lt;=speed</label>
		</location>
		<init ref="id48"/>
		<transition id="id51">
			<source ref="id50"/>
			<target ref="id49"/>
			<label kind="guard" x="-357" y="17">x&gt;=speed</label>
			<label kind="synchronisation" x="-552" y="34">move_belt[N_CONVEYOR_BELT]?</label>
			<label kind="assignment" x="-331" y="51">x = 0</label>
			<nail x="-280" y="76"/>
			<nail x="-280" y="17"/>
		</transition>
		<transition id="id52">
			<source ref="id49"/>
			<target ref="id50"/>
			<label kind="guard" x="-68" y="17">x &gt;= speed</label>
			<label kind="synchronisation" x="-68" y="34">move_belt[0]!</label>
			<label kind="assignment" x="-68" y="51">x = 0</label>
			<nail x="-76" y="17"/>
			<nail x="-76" y="76"/>
		</transition>
		<transition id="id53">
			<source ref="id48"/>
			<target ref="id49"/>
			<label kind="synchronisation" x="-170" y="-119">initialize!</label>
			<label kind="assignment" x="-170" y="-102">x = 0, init_system()</label>
		</transition>
	</template>
	<template>
		<name>OutSensor</name>
		<parameter>int[0, N_OUT_SENSORS-1] id, int[0, N_SLOTS-1] queue_head, int[0, N_SLOTS-1] queue_tail</parameter>
		<declaration>
bool full_queue() {
    for (i : int[queue_tail, queue_head])
        if(systemState[i] == false)
             return false;
    return true;
}</declaration>
		<location id="id54" x="-34" y="-60">
			<name x="-17" y="-77">Unlocked</name>
		</location>
		<location id="id55" x="-42" y="136">
			<name x="-16" y="136">Locked</name>
		</location>
		<location id="id56" x="-34" y="-170">
		</location>
		<init ref="id56"/>
		<transition id="id57">
			<source ref="id55"/>
			<target ref="id54"/>
			<label kind="guard" x="-280" y="25">full_queue() == false</label>
			<label kind="assignment" x="-331" y="42">outSensorsState[id] = false</label>
			<nail x="-144" y="93"/>
			<nail x="-144" y="-25"/>
		</transition>
		<transition id="id58">
			<source ref="id54"/>
			<target ref="id55"/>
			<label kind="guard" x="85" y="25">full_queue() == true</label>
			<label kind="assignment" x="85" y="42">outSensorsState[id] = true</label>
			<nail x="68" y="-25"/>
			<nail x="68" y="93"/>
		</transition>
		<transition id="id59">
			<source ref="id56"/>
			<target ref="id54"/>
			<label kind="synchronisation" x="-25" y="-144">initialize?</label>
			<label kind="assignment" x="-25" y="-127">outSensorsState[id] = false</label>
		</transition>
	</template>
	<template>
		<name>Station</name>
		<parameter>const int[0, N_STATIONS-1] station_id, const int[0, N_SLOTS-1] slot_id, const int elaboration_time, const int[0, N_SLOTS-1] slot_entrance, const int[0, N_OUT_SENSORS-1] out_sensor_id</parameter>
		<declaration>clock x;

void complete_elaboration() {
    systemState[slot_id] = false;
    if (slot_id == N_STATE)
        systemState[0] = true;
    else
        systemState[slot_id+1] = true;
    x = 0;
}</declaration>
		<location id="id60" x="-8" y="-229">
		</location>
		<location id="id61" x="-8" y="-136">
			<name x="0" y="-161">Idle</name>
		</location>
		<location id="id62" x="382" y="144">
			<name x="399" y="127">Pre_processing</name>
		</location>
		<location id="id63" x="-8" y="144">
			<name x="9" y="119">Processing</name>
			<label kind="invariant" x="-84" y="161">x &lt;= elaboration_time</label>
		</location>
		<location id="id64" x="382" y="-136">
			<committed/>
		</location>
		<location id="id65" x="-187" y="-25">
			<name x="-238" y="-34">Done</name>
		</location>
		<init ref="id60"/>
		<transition id="id66">
			<source ref="id65"/>
			<target ref="id61"/>
			<label kind="guard" x="-102" y="-76">outSensorsState[out_sensor_id] == false</label>
		</transition>
		<transition id="id67">
			<source ref="id64"/>
			<target ref="id62"/>
			<label kind="synchronisation" x="390" y="-34">stationBusy[station_id]!</label>
		</transition>
		<transition id="id68">
			<source ref="id63"/>
			<target ref="id65"/>
			<label kind="guard" x="-246" y="42">x &gt;= elaboration_time</label>
			<label kind="synchronisation" x="-246" y="59">stationFree[station_id]!</label>
			<label kind="assignment" x="-246" y="76">complete_elaboration()</label>
		</transition>
		<transition id="id69">
			<source ref="id62"/>
			<target ref="id63"/>
			<label kind="synchronisation" x="127" y="144">send[slot_id]?</label>
			<label kind="assignment" x="127" y="161">x = 0,
systemState[slot_id] = true</label>
		</transition>
		<transition id="id70">
			<source ref="id61"/>
			<target ref="id64"/>
			<label kind="guard" x="68" y="-161">systemState[slot_entrance] == true</label>
		</transition>
		<transition id="id71">
			<source ref="id60"/>
			<target ref="id61"/>
			<label kind="synchronisation" x="0" y="-212">initialize?</label>
		</transition>
	</template>
	<system>/**
 * Configuration
 */

const double SPEED = 1.0;

/**
 * System definition
 */

motor = Motor(SPEED);

system motor;
</system>
	<queries>
		<query>
			<formula/>
			<comment/>
		</query>
	</queries>
</nta>
