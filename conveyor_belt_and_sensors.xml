<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>const int SPEED = 1;    // slots/time
const int N_SLOTS = 104;
const int N_MAIN_BRANCH = 93;
const int START_BRANCH_SLOT = 66;
const int END_BRANCH_SLOT = 88;
const int N_STATIONS = 6;
const int N_IN_SENSORS = 6;
const int N_OUT_SENSORS = 5;

broadcast chan initialize, move, receive_all;
urgent chan go[N_SLOTS+N_STATIONS], stop[N_SLOTS+N_STATIONS], switch_branch, ready_to_receive;

bool sequence[N_SLOTS + N_STATIONS]; // true: slot, false: station
bool system_state[N_SLOTS + N_STATIONS];

void init_system() {
    for(i : int[0, N_SLOTS + N_STATIONS - 1])
        sequence[i] = true;
    sequence[1] = false;
    sequence[19] = false;
    sequence[40] = false;
    sequence[83] = false;
    sequence[95] = false;
    sequence[104] = false;


    for(i : int[0, N_SLOTS + N_STATIONS - 1])
        if(i &gt;= 3 and i &lt;= 14)
            system_state[i] = true;
        else
            system_state[i] = false;
}

bool init_disks(int id) {
    if(id &gt;= 3 and id &lt;= 14)
        return true;
    return false;
}</declaration>
	<template>
		<name x="5" y="5">conveyor_belt_slot</name>
		<parameter>const int id</parameter>
		<declaration>int next_slot, prev_slot;
bool occupied;

int get_next() {
    if(id == N_MAIN_BRANCH - 1)
        return 0;
    if(id == N_SLOTS + N_STATIONS - 1)
        return END_BRANCH_SLOT;
    return id + 1;
}

int get_prev() {
    if(id == 0)
        return N_MAIN_BRANCH - 1;
    if(id == N_MAIN_BRANCH)
        return START_BRANCH_SLOT;
    return id - 1;
}

void initialize_slot() {
    occupied = init_disks(id);
    next_slot = get_next();
    prev_slot = get_prev();
}

void switch_branch() {
    if(next_slot == id + 1)
        next_slot = N_MAIN_BRANCH;
    else
        next_slot = id + 1;
}</declaration>
		<location id="id0" x="-187" y="-561">
		</location>
		<location id="id1" x="-187" y="-416">
			<name x="-178" y="-442">Free_to_Move</name>
		</location>
		<location id="id2" x="-459" y="-280">
			<name x="-442" y="-289">Stopped</name>
		</location>
		<location id="id3" x="178" y="-416">
			<committed/>
		</location>
		<location id="id4" x="-459" y="-110">
			<committed/>
		</location>
		<location id="id5" x="-459" y="-416">
			<committed/>
		</location>
		<location id="id6" x="178" y="-110">
			<committed/>
		</location>
		<location id="id7" x="-8" y="-110">
			<name x="-51" y="-144">Wait_to_Receive</name>
		</location>
		<location id="id8" x="-187" y="-110">
			<committed/>
		</location>
		<location id="id9" x="-510" y="-476">
			<committed/>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id9"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-416" y="-501">go[prev_slot]!</label>
			<nail x="-229" y="-476"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="-561" y="-382">go[id]?</label>
			<nail x="-510" y="-331"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id1"/>
			<label kind="guard" x="-399" y="-238">system_state[id] = false</label>
			<label kind="assignment" x="-357" y="-221">occupied = false</label>
			<nail x="-246" y="-161"/>
			<nail x="-246" y="-348"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id1"/>
			<label kind="guard" x="-178" y="-238">system_state[id] == true</label>
			<label kind="assignment" x="-178" y="-221">occupied = true</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-119" y="-110">receive_all?</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="42" y="-110">ready_to_receive!</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="guard" x="-127" y="-348">id == START_BRANCH_SLOT</label>
			<label kind="synchronisation" x="-127" y="-331">switch_branch?</label>
			<label kind="assignment" x="-127" y="-314">switch_branch()</label>
			<nail x="-102" y="-365"/>
			<nail x="-153" y="-323"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id6"/>
			<label kind="guard" x="93" y="-289">occupied == false</label>
			<label kind="assignment" x="93" y="-272">system_state[next_slot] = false</label>
			<nail x="85" y="-365"/>
			<nail x="85" y="-161"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id6"/>
			<label kind="guard" x="331" y="-289">occupied == true</label>
			<label kind="assignment" x="331" y="-272">system_state[next_slot] = true</label>
			<nail x="323" y="-365"/>
			<nail x="323" y="-161"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-450" y="-348">stop[prev_slot]!</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id5"/>
			<label kind="guard" x="-357" y="-416">occupied == true</label>
			<label kind="synchronisation" x="-357" y="-399">stop[id]?</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-620" y="-204">stop[prev_slot]!</label>
			<nail x="-518" y="-110"/>
			<nail x="-518" y="-280"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-450" y="-212">move?</label>
			<nail x="-459" y="-178"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="-34" y="-442">move?</label>
			<nail x="-59" y="-416"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-178" y="-518">initialize?</label>
			<label kind="assignment" x="-178" y="-501">initialize_slot()</label>
		</transition>
	</template>
	<template>
		<name>conveyor_belt_motor</name>
		<declaration>clock x;</declaration>
		<location id="id10" x="-790" y="-484">
		</location>
		<location id="id11" x="-790" y="-348">
			<label kind="invariant" x="-773" y="-357">x &lt;= SPEED</label>
		</location>
		<init ref="id10"/>
		<transition>
			<source ref="id11"/>
			<target ref="id11"/>
			<label kind="guard" x="-807" y="-280">x &gt;= SPEED</label>
			<label kind="synchronisation" x="-807" y="-263">move!</label>
			<label kind="assignment" x="-807" y="-246">x = 0</label>
			<nail x="-807" y="-280"/>
			<nail x="-765" y="-280"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="-782" y="-433">initialize?</label>
			<label kind="assignment" x="-782" y="-416">x = 0, init_system()</label>
		</transition>
	</template>
	<template>
		<name>conveyor_belt_handler</name>
		<declaration>int c;</declaration>
		<location id="id12" x="-399" y="-297">
		</location>
		<location id="id13" x="-399" y="-161">
		</location>
		<init ref="id12"/>
		<transition>
			<source ref="id13"/>
			<target ref="id12"/>
			<label kind="guard" x="-552" y="-263">c == N_SLOTS</label>
			<label kind="synchronisation" x="-527" y="-246">receive_all!</label>
			<label kind="assignment" x="-493" y="-229">c = 0</label>
			<nail x="-450" y="-195"/>
			<nail x="-450" y="-272"/>
			<nail x="-416" y="-289"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-450" y="-85">ready_to_receive?</label>
			<label kind="assignment" x="-450" y="-68">c++</label>
			<nail x="-365" y="-85"/>
			<nail x="-425" y="-85"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-391" y="-246">ready_to_receive?</label>
			<label kind="assignment" x="-391" y="-229">c = 1</label>
		</transition>
	</template>
	<template>
		<name>in_sensor</name>
		<parameter>const int id, const int on_slot, const int guarded_station</parameter>
		<location id="id14" x="-535" y="-1105">
		</location>
		<location id="id15" x="-535" y="-986">
			<name x="-603" y="-1011">Unlocked</name>
		</location>
		<location id="id16" x="-866" y="-986">
			<committed/>
		</location>
		<location id="id17" x="-535" y="-773">
			<name x="-560" y="-807">Locked</name>
		</location>
		<location id="id18" x="-229" y="-986">
			<committed/>
		</location>
		<init ref="id14"/>
		<transition>
			<source ref="id17"/>
			<target ref="id17"/>
			<label kind="guard" x="-628" y="-688">system_state[guarded_station] == true</label>
			<label kind="synchronisation" x="-560" y="-671">receive_all?</label>
			<nail x="-526" y="-765"/>
			<nail x="-492" y="-688"/>
			<nail x="-569" y="-688"/>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id15"/>
			<label kind="guard" x="-628" y="-909">system_state[guarded_station] == false</label>
			<label kind="synchronisation" x="-560" y="-892">receive_all?</label>
			<nail x="-526" y="-977"/>
			<nail x="-492" y="-909"/>
			<nail x="-569" y="-909"/>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id15"/>
			<label kind="synchronisation" x="-407" y="-986">go[on_slot]!</label>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id18"/>
			<label kind="guard" x="-492" y="-773">system_state[guarded_station] == false</label>
			<label kind="synchronisation" x="-492" y="-756">receive_all?</label>
			<nail x="-229" y="-773"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id17"/>
			<label kind="synchronisation" x="-773" y="-773">stop[on_slot]!</label>
			<nail x="-866" y="-773"/>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id16"/>
			<label kind="guard" x="-815" y="-986">system_state[guarded_station] == true</label>
			<label kind="synchronisation" x="-815" y="-969">receive_all?</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id15"/>
			<label kind="synchronisation" x="-526" y="-1063">initialize?</label>
		</transition>
	</template>
	<template>
		<name>out_sensor</name>
		<parameter>const int id, const int on_slot, const int guarded_station, const int related_in_sensor</parameter>
		<declaration>bool full_queue() {
    bool check = true;

    for(i : int[on_slot, related_in_sensor])
        if(system_state[i] == false)
            check = false;

    return check;
}</declaration>
		<location id="id19" x="42" y="111">
			<name x="17" y="77">Locked</name>
		</location>
		<location id="id20" x="42" y="-102">
			<name x="-26" y="-127">Unlocked</name>
		</location>
		<location id="id21" x="348" y="-102">
			<committed/>
		</location>
		<location id="id22" x="-289" y="-102">
			<committed/>
		</location>
		<location id="id23" x="42" y="-221">
		</location>
		<init ref="id23"/>
		<transition>
			<source ref="id19"/>
			<target ref="id19"/>
			<label kind="guard" x="-8" y="195">full_queue() == true</label>
			<label kind="synchronisation" x="17" y="213">receive_all?</label>
			<nail x="51" y="119"/>
			<nail x="85" y="196"/>
			<nail x="8" y="196"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id20"/>
			<label kind="guard" x="-8" y="-25">full_queue() == false</label>
			<label kind="synchronisation" x="17" y="-8">receive_all?</label>
			<nail x="51" y="-93"/>
			<nail x="85" y="-25"/>
			<nail x="8" y="-25"/>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id20"/>
			<label kind="synchronisation" x="170" y="-102">go[guarded_station]!</label>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id21"/>
			<label kind="guard" x="127" y="110">full_queue() == false</label>
			<label kind="synchronisation" x="127" y="127">receive_all?</label>
			<nail x="348" y="111"/>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id19"/>
			<label kind="synchronisation" x="-196" y="111">stop[guarded_station]!</label>
			<nail x="-289" y="111"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id22"/>
			<label kind="guard" x="-238" y="-102">full_queue() == true</label>
			<label kind="synchronisation" x="-238" y="-85">receive_all?</label>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id20"/>
			<label kind="synchronisation" x="51" y="-179">initialize?</label>
		</transition>
	</template>
	<system>
    </system>
	<queries>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
	</queries>
</nta>
